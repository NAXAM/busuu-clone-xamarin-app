// This file has been autogenerated from a class added in the UI designer.

using System;
using CoreGraphics;
using Foundation;
using MvvmCross.Binding.BindingContext;
using MvvmCross.iOS.Views;
using MvvmCross.Plugins.Messenger;
using Naxam.Busuu.Core.Models;
using Naxam.Busuu.iOS.Profile.Common;
using Naxam.Busuu.iOS.Profile.Services;
using Naxam.Busuu.Profile.Models;
using Naxam.Busuu.Profile.ViewModels;
using UIKit;

namespace Naxam.Busuu.iOS.Profile.Views
{
    [MvxFromStoryboard(StoryboardName = "Profile")]
    public partial class SettingLanguageSpeakView : MvxViewController<SettingLanguageSpeakViewModel>
    {
        MvxSubscriptionToken token;
        LanguageLevel myLevel;

		public SettingLanguageSpeakView(IntPtr handle) : base(handle)
		{
		}

		void OnReceiveMessage(ShowLanguageLevelDialogMessage obj)
		{
            viewForDialog.Hidden = !viewForDialog.Hidden;
		}

		public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            token = DialogProfileService.messenger.Subscribe<ShowLanguageLevelDialogMessage>(OnReceiveMessage);

            ViewStartBar.Layer.ShadowRadius = 2;
            ViewStartBar.Layer.ShadowOpacity = 0.25f;
            ViewStartBar.Layer.ShadowOffset = new CGSize(0, 2);

            viewdot1LeadingContraint.Constant = viewChooseLever.Bounds.Width / 3;
            viewdot2LeadingContraint.Constant = viewChooseLever.Bounds.Width / 3;

            myLevel = LanguageLevel.Beginner;

            var lSource = new LanguageSpeakTableViewSource(LanguageSpeakTableView);

			var img = UIImage.FromBundle("iconSliderLever");
            sliderLever.SetThumbImage(img, UIControlState.Normal);
            sliderLever.SetThumbImage(img, UIControlState.Selected);
            sliderLever.SetThumbImage(img, UIControlState.Highlighted);

            var setBinding = this.CreateBindingSet<SettingLanguageSpeakView, SettingLanguageSpeakViewModel>();
            setBinding.Bind(lSource).To(vm => vm.Languages);
            setBinding.Bind(btnBack).To(vm => vm.BackCommand);
            setBinding.Bind(btnDone).To(vm => vm.DoneCommand);
            setBinding.Bind(lSource).For(vm => vm.SelectedItem).To(vm => vm.LanguageSelected);
            setBinding.Apply();

            LanguageSpeakTableView.Source = lSource;

			UITapGestureRecognizer tapDialog = new UITapGestureRecognizer(() => {
                viewForDialog.Hidden = !viewForDialog.Hidden;
			});

            ViewBackgroundDialog.AddGestureRecognizer(tapDialog);
            sliderLever.ValueChanged += SliderLever_ValueChanged;
		}

        void SliderLever_ValueChanged(object sender, EventArgs e)
        {
            var acbd = (int)(sliderLever.Value);

            if ((sliderLever.Value > acbd) && (sliderLever.Value - acbd > 0.75))
            {
                sliderLever.Value = acbd + 1;
            }
            else if (sliderLever.Value < acbd)
            {
                sliderLever.Value = acbd;
            }
            else
            {
				sliderLever.Value = (int)(sliderLever.Value);
			}

            if (sliderLever.Value == 1)
            {
                textChooseLever.Text = "INTERMEDIATE";
                myLevel = LanguageLevel.Intermediate;
            }
            else if (sliderLever.Value == 2)
            {
                textChooseLever.Text = "ADVANCED";
                myLevel = LanguageLevel.Advanced;
            }
            else if (sliderLever.Value == 3)
            {
                textChooseLever.Text = "NATIVE";
                myLevel = LanguageLevel.Native;
            }
            else
            {
                textChooseLever.Text = "BEGINNER";
                myLevel = LanguageLevel.Beginner;
            }
		}
         
        partial void btnAccept_TouchUpInside(NSObject sender)
        {
			DialogProfileService.messenger.Publish<LanguageLevelMessage>(new LanguageLevelMessage("")
			{
                Accept = true,
                Level = myLevel
			});

            viewForDialog.Hidden = true;
            sliderLever.Value = 0;
        }

        partial void btnCancel_TouchUpInside(NSObject sender)
        {
            viewForDialog.Hidden = true;
            sliderLever.Value = 0;
        }
    }
}
