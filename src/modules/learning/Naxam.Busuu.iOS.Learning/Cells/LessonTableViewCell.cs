// This file has been autogenerated from a class added in the UI designer.

using System;
using CoreGraphics;
using Foundation;
using MvvmCross.Binding.BindingContext;
using MvvmCross.Binding.iOS.Views;
using Naxam.Busuu.iOS.Core.Converter;
using Naxam.Busuu.iOS.Core.Views;
using Naxam.Busuu.iOS.Learning.Common;
using Naxam.Busuu.iOS.Learning.Views;
using Naxam.Busuu.Learning.Models;
using UIKit;

namespace Naxam.Busuu.iOS.Learning.Cells
{
    public interface ILessonTableViewCellDelegate
    {
        void DidTapOnLessonCell(LessonTableViewCell cell);
    }

    public partial class LessonTableViewCell : MvxTableViewCell
    {
        public ILessonTableViewCellDelegate Delegate;
        private readonly MvxImageViewLoader imgLessonViewLoader;
        // open state of cell
        public bool IsOpen = false;
        // maintain color of cell
        CGColor cellColor;
        public LessonTableViewCell(IntPtr handle) : base(handle)
        {
            imgLessonViewLoader = new MvxImageViewLoader(() => imgLesson);
            this.DelayBind(() =>
          {
              var bindingSet = this.CreateBindingSet<LessonTableViewCell, LessonModel>();
              bindingSet.Bind(lbNumber).To(m => m.LessonNumber);
              bindingSet.Bind(lbTitle).To(m => m.LessonName);
              bindingSet.Bind(imgLessonViewLoader).To(m => m.Icon);bindingSet.Bind(imgLesson.Layer).For("BorderColor").To(m => m.Color).WithConversion(nameof(HexToUIColorValueConverter), null);
              bindingSet.Bind(CellShape).For("RippleColor").To(m => m.Color).WithConversion(nameof(HexToUIColorValueConverter), null);
              bindingSet.Apply();
          });
        }

        public RippleLayer CellShape;

        private nfloat _LabelDefaultHeight;

        public override void AwakeFromNib()
        {
            base.AwakeFromNib();
            imgLesson.Layer.CornerRadius = imgLesson.Bounds.Size.Height / 2;
            imgLesson.Layer.BorderWidth = 1;

            btnDownload.SetImage(UIImage.FromBundle("download_icon"), UIControlState.Normal);
            btnDownload.TintColor = UIColor.FromRGB(204, 204, 204);

            CellShape = new RippleLayer();
            // config ripple layer
            CellShape.ParentView = ContentView;
            CellShape.InitShapeLayer();
            ContentView.AddGestureRecognizer(new UITapGestureRecognizer(HandleTap));

            _LabelDefaultHeight = this.numberLblHeightConstraint.Constant;
        }


        public void Update(bool isOpen, LessonModel model)
        {
            IsOpen = isOpen;
            cellColor = Core.Extensions.ColorUtils.ColorFromHex(model.Color).CGColor;
            if (IsOpen)
            {
                ContentView.Layer.BackgroundColor = cellColor;
                numberLblHeightConstraint.Constant = _LabelDefaultHeight * 1.5f;
                this.UpdateConstraintsIfNeeded();

                this.LayoutIfNeeded();
                lbNumber.TextColor = UIColor.White;
                lbTitle.TextColor = UIColor.White;
                btnDownload.TintColor = UIColor.White;
            }
            else
            {
                CellShape.AnimateColor = UIColor.White;
                CellShape.FinishColor = UIColor.Clear;
                numberLblHeightConstraint.Constant = _LabelDefaultHeight;
                this.UpdateConstraintsIfNeeded();

                this.LayoutIfNeeded();
                lbNumber.TextColor = UIColor.FromRGB(57, 169, 246);
                lbTitle.TextColor = UIColor.FromRGB(168, 177, 183);
                btnDownload.TintColor = UIColor.FromRGB(204, 204, 204);
                ContentView.Layer.BackgroundColor = UIColor.White.CGColor;
            }
        }

        public void HandleTap(UITapGestureRecognizer obj)
        {
            var touchLocation = obj.LocationInView(ContentView);
            IsOpen = !IsOpen;
            cellColor = imgLesson.Layer.BorderColor;

            if (IsOpen)
            {
				lbNumber.TextColor = UIColor.White;
				lbTitle.TextColor = UIColor.White;
				btnDownload.TintColor = UIColor.White;

				//CellShape.AnimateCGColor = cellColor;
				//CellShape.FinishCGColor = cellColor;
				//CellShape.WillAnimateTapGesture(touchLocation);

				ContentView.BackgroundColor = CellShape.AnimateColor;

				// lesson number & title scale up
				numberLblHeightConstraint.Constant *= 1.5f;
                //this.UpdateConstraintsIfNeeded();

                //UIView.Animate(0.4, 0, UIViewAnimationOptions.CurveLinear, () =>
                                    //{
                                    //    this.LayoutIfNeeded();
                                       
                                    //}, null);
            }
            else
            {
				lbNumber.TextColor = UIColor.FromRGB(57, 169, 246);
				lbTitle.TextColor = UIColor.FromRGB(168, 177, 183);
				btnDownload.TintColor = UIColor.FromRGB(204, 204, 204);
                // scale down lesson number & title
                numberLblHeightConstraint.Constant /= 1.5f;
				//this.UpdateConstraintsIfNeeded();

				//UIView.Animate(0.4, 0, UIViewAnimationOptions.CurveLinear, () =>
				//{
				//    this.LayoutIfNeeded();

				//}, () =>
				//{
				//    CellShape.AnimateColor = UIColor.White;
				//    CellShape.FinishColor = UIColor.Clear;
				//    CellShape.WillAnimateTapGesture(touchLocation);
				//});

				//CellShape.AnimateCGColor = UIColor.White.CGColor;
				//CellShape.FinishColor = UIColor.Clear;
				//CellShape.WillAnimateTapGesture(touchLocation);

                ContentView.BackgroundColor = UIColor.White;
			}

            Delegate?.DidTapOnLessonCell(this);
        }

        partial void btnDownload_TouchUpInside(NSObject sender)
        {
            LearnView.messengerDownload.Publish(new ShowDownloadDialogMessager(this));
        }
    }
}
