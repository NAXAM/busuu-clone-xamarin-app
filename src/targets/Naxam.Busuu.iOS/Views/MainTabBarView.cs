    // This file has been autogenerated from a class added in the UI designer.

using System;

using MvvmCross.iOS.Views;
using MvvmCross.iOS.Views.Presenters.Attributes;
using Naxam.Busuu.ViewModels;
using Naxam.Busuu.iOS.Core.CustomControls;
using UIKit;
using System.IO;

namespace Naxam.Busuu.iOS.Views
{
    [MvxFromStoryboard(StoryboardName = "Main")]
    [MvxRootPresentation(WrapInNavigationController = true)]
    public partial class MainTabBarView : MvxTabBarViewController<MainViewModel>, IMaterialTabBarDelegate
	{
        bool _isPresentedFirstTime = true;

        MaterialTabBar _CustomTabBar;

		public MainTabBarView (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

			this.NavigationController.NavigationBarHidden = true;

			var documents = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);
			var directoryname = Path.Combine(documents, "MySettingDocuments");
			Directory.CreateDirectory(directoryname);

			var seedFile = Path.Combine(directoryname, "fileCheckLogin.txt");
			File.WriteAllText(seedFile, "0");
        }

		public override void ViewWillAppear(bool animated)
		{
			base.ViewWillAppear(animated);

			if (ViewModel != null && _isPresentedFirstTime)
			{               
				_isPresentedFirstTime = false;
				ViewModel.ShowInitialViewModelsCommand.Execute(null);	

                _CustomTabBar = new MaterialTabBar(TabBar, UIColor.FromRGB(57, 169, 246))
                {
                    Delegate = this
                };

				TabBar.Items[3].BadgeValue = "9";
                //SelectedIndex = 4;
			}
		}

        public override nint SelectedIndex
        {
            get
            {
                return base.SelectedIndex;
            }
            set
            {
                base.SelectedIndex = value;
                _CustomTabBar?.SetSelectedIndex((int)value, false);
            }
        }

        void IMaterialTabBarDelegate.SelectedIndex(MaterialTabBar tabbar, int index)
        {
            SelectedIndex = index;
        }
    }
}
